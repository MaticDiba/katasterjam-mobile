import{eM as t,eL as s}from"./index.e77f560e.js";const o=t("excursions",{state:()=>({excursions:[],searchParameters:{name:"",pageNumber:1,sort:null,sortDirection:null,my:!1},totalPages:0,searching:!1,searchAbort:new AbortController}),getters:{getExcursions(e){return e.excursions},getTotalPages(e){return e.totalPages},getQuery(e){return e.searchParameters.name},getPageNumber(e){return e.searchParameters.pageNumber},getCurrentSort(e){return e.searchParameters.sort},getSearchingStatus(e){return e.searching}},actions:{addQueryParameter(e){this.searchParameters.name=e,this.searchParameters.pageNumber=1},onlyMyExcursions(e){this.searchParameters.my=e,this.searchParameters.pageNumber=1},incrementPageNumber(){this.searchParameters.pageNumber++},async searchForExcursions(){this.searching&&this.searchAbort.abort(),this.searching=!0,this.searchAbort=new AbortController;try{const e=await s.get("/api/excursions",{params:this.searchParameters,signal:this.searchAbort.signal});this.totalPages=JSON.parse(e.headers.pagination).totalPages,this.searchParameters.pageNumber>1?e.data.map(r=>this.excursions.push(r)):this.excursions=e.data}catch(e){console.error(e)}finally{this.searching=!1}},async joinExcursion(e){try{await s.post(`/api/excursions/${e.id}/join`);const r=this.excursions.find(a=>a.id===e.id);r.requestedJoin=!0}catch(r){console.error(r)}}}});export{o as u};
